---
import Layout from '../../../layouts/Layout.astro';
import { getCollection } from 'astro:content'
import type { CollectionEntry } from 'astro:content';
import ArticleCard from '../../../components/ArticleCard.astro';
import { capitalize } from '../../../utils';

export async function getStaticPaths() {
  // Fetch all blog articles
  const allBlogArticles: CollectionEntry<'blog'>[] = await getCollection('blog');

  // Extract all unique tags from the articles
  const uniqueTags = Array.from(new Set(allBlogArticles.flatMap(article => article.data.tags)));
  
  // Generate paths for each unique tag
  return uniqueTags.map(tag => ({
    params: {
      tag
    },
    props: {
      tag,
      articles: allBlogArticles.filter(article => article.data.tags.includes(tag))
    }
  }));
}

interface Props {
  articles: CollectionEntry<'blog'>[];
  tag: string;
}

const { articles, tag }: Props = Astro.props;

---

<Layout>
    <a href="/articles" class="inline-block bg-gray-100 p-2 mb-6 hover:bg-indigo-500 hover:text-white">Back To Articles</a>
    <h1 class="text-2xl pb-3">#{capitalize(tag)}</h1>

      <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
        {articles.map( article => (
          <ArticleCard article={article} />
        ))}
      </div>
</Layout>